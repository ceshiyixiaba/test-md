git简介

廖雪峰git教程：http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000
《git权威指南》

使用经验所谈->开发流程图

1.初始化版本库
0)mkdir testgit
1)git init初始化版本库(多了个隐藏目录.git，这就是git版本库【也叫仓库】)
2)告诉git当前用户的姓名和邮件地址
git config --local(默认) user.name/user.email "xxx" 版本库(本地)级别配置文件　优先级最高
git config --global ...全局配置文件
git config --system ...系统级配置文件
git config -e --XXX 快捷查看对应环境配置文件
git config --unset --local user.name　删除配置文件

git可以随意设置提交的用户名和邮件地址信息，这是分布式版本控制系统的特性所决定的，每个人都是自己版本库的主人。团队协作设置一个共享的版本库，在团队成员向共享版本推送新提交时，会进行用户身份认证并检查授权，但不会对提交中的包含的提交者ID作进一步检查
3)code... echo "init　index.html" -> index.html
4)git add index.html 将这个新建文件添加到版本库（暂存区）|| git add .(所有)
5)git commit -m "init index.html"　成为历史
6)git log

2.git暂存区
echo "2 line" >> index.html
git add index.html
git status [-s 精简格式]
echo "3 line" >> index.html
git status [-s　精简格式]

git diff 默认工作区与暂存区相比的差异
git diff HEAD 工作区与当前工作分支
git diff --cached/--staged 暂存区与版本库的差异

3.如何推去远端仓库呢？
1)代码托管平台(github、git@osc、gitlab)

2)如何建立与远端仓库的链接(https、ssh)
配置ssh-keygen -t rsa -C "gita@zhbitjsj.com"
Enter file in which to save the key (/home/wenjiachengy/.ssh/id_rsa)：【秘钥存储位置】
cat /home/wenjiachengy/.ssh/id_rsa.pub 把公钥放在git代码托管平台处

3)在代码托管平台，新建项目，是否初始化ReadMe?

4)添加remote地址
git remote add origin git@git.oschina.net:zhbitjsjgita/git.git
其他相关命令:
git remote -v
git remote remove origin

5)开始推代码啦！
git push origin master
git push origin[远端仓库地址别名] master[本地分支]:master[远端分支，可省略，默认master]


4.协作开发
1)gitb进行开发
testgit项目管理者把gitb加入到项目
git clone 仓库地址（这里我们尝试使用https）
b用户也要告诉git当前用户的姓名和邮件地址
默认设置了remote地址

gitb需要修复一个bug
git checkout -b b_fix_bug_1 新开b_fix_bug_1分支并切换，如果直接切换git checkout
git branch 查看分支(默认本地) -r远端　-a所有
code... echo "b fix bug 1" >> index.html
git add .
git commit -m "b fix bug 1"
git push origin b_fix_bug_1:b_fix_bug_1
提pr请求合并master,可指定审核者、测试者
审核者、测试者通过后，项目管理员可进行自动合并

２)gita同时进行开发
git checkout -b a_fix_bug_1	
code... echo "init index2.html" -> index2.html
git add .
git commit -m "init index2.html"
git pull origin master 合并最新的master
git push origin master

深入理解git合并原理：git log --graph


5.开发流程图回顾


6.其他常用命令
.gitinore 不进行版本追踪，若果已经进行版本追踪　已进行跟踪的git rm -r --cached　-> git commit -m　-> git push origin master
git reset --hard commit_id git relog
git reset commit_id
git blame【不需要再注释签名】
git commit --amend -m "init index.html"


7.issues【任务指派】、github【分享开源代码】、pages





















